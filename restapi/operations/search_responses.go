// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"nfl-rushing/models"
)

// SearchOKCode is the HTTP code returned for type SearchOK
const SearchOKCode int = 200

/*SearchOK OK

swagger:response searchOK
*/
type SearchOK struct {

	/*
	  In: Body
	*/
	Payload *models.SearchResponseBody `json:"body,omitempty"`
}

// NewSearchOK creates SearchOK with default headers values
func NewSearchOK() *SearchOK {

	return &SearchOK{}
}

// WithPayload adds the payload to the search o k response
func (o *SearchOK) WithPayload(payload *models.SearchResponseBody) *SearchOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the search o k response
func (o *SearchOK) SetPayload(payload *models.SearchResponseBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SearchOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SearchInternalServerErrorCode is the HTTP code returned for type SearchInternalServerError
const SearchInternalServerErrorCode int = 500

/*SearchInternalServerError Server Error

swagger:response searchInternalServerError
*/
type SearchInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.BadRequestResponse `json:"body,omitempty"`
}

// NewSearchInternalServerError creates SearchInternalServerError with default headers values
func NewSearchInternalServerError() *SearchInternalServerError {

	return &SearchInternalServerError{}
}

// WithPayload adds the payload to the search internal server error response
func (o *SearchInternalServerError) WithPayload(payload *models.BadRequestResponse) *SearchInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the search internal server error response
func (o *SearchInternalServerError) SetPayload(payload *models.BadRequestResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SearchInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
